{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","url","a","fetch","response","ok","Error","status","statusText","json","result","emptyMovie","FindMovie","addNewMovie","useState","searchQuery","setSearchQuery","isErrorOccurred","setIsErrorOccurred","loadedMovie","setLoadedMovie","handleSearchButtonClick","movieTitle","currentMovie","htmlFor","value","type","id","placeholder","onChange","event","target","onClick","App","state","findMovieInArray","movieToCheck","find","addMovie","receivedMovie","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc7c67a0.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=';\nconst personalKey = '6a07e73f';\n\nconst request = async (url: string) => {\n  const response = await fetch(`${BASE_URL}${url}`);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  // I was forced to add the condition below\n  // because there is no any mistake if the title request is wrong\n  // we just receive response object with message 'Error'\n  if (!result.Title) {\n    throw new Error('Wrong title');\n  }\n\n  return result;\n};\n\nexport const getMovie = (movieTitle: string) => {\n  return request(`${personalKey}&t=${movieTitle}`);\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from './api';\n\ntype Props = {\n  addNewMovie: (newMovie: Movie) => void;\n};\n\nconst emptyMovie = {\n  Poster: '',\n  Title: '',\n  Plot: '',\n  imdbID: '',\n};\n\nexport const FindMovie: React.FC <Props> = ({ addNewMovie }) => {\n  const [\n    searchQuery,\n    setSearchQuery,\n  ] = useState('');\n\n  const [\n    isErrorOccurred,\n    setIsErrorOccurred,\n  ] = useState(false);\n\n  const [\n    loadedMovie,\n    setLoadedMovie,\n  ] = useState(emptyMovie);\n\n  const handleSearchButtonClick = async () => {\n    try {\n      const currentMovie = await getMovie(searchQuery);\n\n      setLoadedMovie(currentMovie);\n\n      setIsErrorOccurred(false);\n\n      return currentMovie;\n    } catch (error) {\n      setIsErrorOccurred(true);\n\n      return error;\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              value={searchQuery}\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              onChange={\n                (event) => setSearchQuery(event.target.value)\n              }\n            />\n          </div>\n\n          {\n            (isErrorOccurred && searchQuery)\n            && (\n              <p className=\"help is-danger\">\n                Can&apos;t find a movie with such title\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                handleSearchButtonClick();\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addNewMovie(loadedMovie);\n                setSearchQuery('');\n                setLoadedMovie(emptyMovie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {\n          (!isErrorOccurred && loadedMovie.Title)\n          && (\n            <MovieCard movie={loadedMovie} />\n          )\n        }\n      </div>\n    </>\n  );\n};\n","import { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    movies: [],\n  };\n\n  findMovieInArray = (movieToCheck: Movie) => {\n    if (this.state.movies\n      .find(movie => movie.imdbID === movieToCheck.imdbID)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  addMovie = (receivedMovie: Movie) => {\n    if (this.findMovieInArray(receivedMovie)) {\n      return;\n    }\n\n    this.setState(state => {\n      return {\n        movies: [...state.movies,\n          receivedMovie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addNewMovie={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}